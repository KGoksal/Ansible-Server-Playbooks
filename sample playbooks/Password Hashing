- name: Create a user
  hosts: all
  become: true
  vars_files:
    - myuser.yml
  tasks:
    - name: Create user
      ansible.builtin.user:
        name: "{{ username }}"
        password: "{{ password }}"
        update_password: on_create  # Optional: Only update the password if the user is created

# you can define username and password in myuser.yml and you can referre that file via vars_files module. However, storing passwords in plaintext is not secure. It's better to use hashed passwords. Ansible can handle password hashing using the password option
# To use hashed passwords, follow these steps:

# 1. Generate a hashed password using a tool like `openssl`:
#    openssl passwd -1 "your_password_here"

# 2. Replace `your_password_here` with your actual password to generate the hashed version.
#    Example: `openssl passwd -1 "mysecurepassword"`

# 3. In your `myuser.yml` file, use the hashed password:
#    username: myuser
#    password: $1$somehashedpassword

# 4. Ensure `myuser.yml` is secure and accessible only to authorized users.

# This approach ensures that sensitive information is not stored in plaintext.
# You can list your users with this bash command: ansible all -b -m command -a "grep myuser /etc/shadow"
